<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>408</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>room_get_name(room) != "roomInv"</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>422</id>
        <kind>1</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Destroy if no health otherwise move
found = true;
if (global.class == "Rogue")
{
    if (choose(1, 2, 3, 4) == 1)
    {
        found = false;
    }
}
if (hp &lt;= 0)
{
    if (gold &gt; 0)
    {
        target = instance_create(x, y, obj_gold);
        target.amount = gold;
    }
    instance_destroy();
}
else if (found)
{
    if(!global.p_turn &amp;&amp; !moved)
    {
        target = instance_place(x + movespeed, y, obj_wall);
        target2 = instance_place(x + movespeed, y, obj_player);
        _i = 1;
        _z = 0;
        if (target == noone)
            _z = 1;
        else
            _z = 0;
        while(_z == 1)
        {
            if(target2 != noone)
            {
                if (!place_meeting(x + movespeed, y, obj_entity))
                {
                    x += movespeed;
                    instance_create(x - movespeed, y, obj_floor);
                    moved = true;
                    global.move += 1;
                }
                else if (place_meeting(x + movespeed, y, obj_player))
                {
                    target = instance_place(x + movespeed, y, obj_player);
                    print("The " + name + " hits!");
                    target.hp -= irandom_range(1, attack);
                    moved = true;
                    global.move += 1;
                }
                _z = 0;
            }
            else
            {
                _i += 1;
                target = instance_place(x + (movespeed * _i), y, obj_wall);
                target2 = instance_place(x + (movespeed * _i), y, obj_player);
                if (target == noone)
                    _z = 1;
                else
                    _z = 0;
            }
        }
    }
    if(!global.p_turn &amp;&amp; !moved)
    {
        target = instance_place(x - movespeed, y, obj_wall);
        target2 = instance_place(x - movespeed, y, obj_player);
        _i = 1;
        _z = 0;
        if (target == noone)
            _z = 1;
        else
            _z = 0;        
        while(_z == 1)
        {
            if(target2 != noone)
            {
                if (!place_meeting(x - movespeed, y, obj_entity))
                {
                    x -= movespeed;
                    moved = true;
                    global.move += 1;
                }
                else if (place_meeting(x - movespeed, y, obj_player))
                {
                    target = instance_place(x - movespeed, y, obj_player);
                    print("The " + name + " hits!");
                    target.hp -= irandom_range(1, attack);
                    moved = true;
                    global.move += 1;
                }
                _z = 0;
            }
            else
            {
                _i += 1;
                target = instance_place(x - (movespeed * _i), y, obj_wall);
                target2 = instance_place(x - (movespeed * _i), y, obj_player);
                if (target == noone)
                    _z = 1;
                else
                    _z = 0;
            }
        }
    }
    if(!global.p_turn &amp;&amp; !moved)
    {
        target = instance_place(x, y + movespeed, obj_wall);
        target2 = instance_place(x, y + movespeed, obj_player);
        _i = 1;
        _z = 0;
        if (target == noone)
            _z = 1;
        else
            _z = 0;
        while(_z == 1)
        {
            if(target2 != noone)
            {
                if (!place_meeting(x, y + movespeed, obj_entity))
                {
                    y += movespeed;
                    moved = true;
                    global.move += 1;
                }
                else if (place_meeting(x, y + movespeed, obj_player))
                {
                    target = instance_place(x, y + movespeed, obj_player);
                    print("The " + name + " hits!");
                    target.hp -= irandom_range(1, attack);
                    moved = true;
                    global.move += 1;
                }
                _z = 0;
            }
            else
            {
                _i += 1;
                target = instance_place(x, y + (movespeed * _i), obj_wall);
                target2 = instance_place(x, y + (movespeed * _i), obj_player);
                if (target == noone)
                    _z = 1;
                else
                    _z = 0;
            }
        }
    }
    
    if(!global.p_turn &amp;&amp; !moved)
    {
        target = instance_place(x, y - movespeed, obj_wall);
        target2 = instance_place(x, y - movespeed, obj_player);
        _i = 1;
        _z = 0;
        if (target == noone)
            _z = 1;
        else
            _z = 0;
        while(_z == 1)
        {
            if(target2 != noone)
            {
                if (!place_meeting(x, y - movespeed, obj_entity))
                {
                    y -= movespeed;
                    moved = true;
                    global.move += 1;
                }
                else if (place_meeting(x, y - movespeed, obj_player))
                {
                    target = instance_place(x, y - movespeed, obj_player);
                    print("The " + name + " hits!");
                    target.hp -= irandom_range(1, attack);
                    moved = true;
                    global.move += 1;
                }

                _z = 0;
            }
            else
            {
                _i += 1;
                target = instance_place(x, y - (movespeed * _i), obj_wall);
                target2 = instance_place(x, y - (movespeed * _i), obj_player);
                if (target == noone)
                    _z = 1;
                else
                    _z = 0;
            }
        }
    }
    if(!global.p_turn &amp;&amp; !moved)
    {
        target = instance_place(x + movespeed, y + movespeed, obj_wall);
        target2 = instance_place(x + movespeed, y + movespeed, obj_player);
        _i = 1;
        _z = 0;
        if (target == noone)
            _z = 1;
        else
            _z = 0;
        while(_z == 1)
        {
            if(target2 != noone)
            {
                if (!place_meeting(x + movespeed, y + movespeed, obj_entity))
                {
                    x += movespeed;
                    y += movespeed;
                    moved = true;
                    global.move += 1;
                }
                else if (place_meeting(x + movespeed, y + movespeed, obj_player))
                {
                    target = instance_place(x + movespeed, y + movespeed, obj_player);
                    print("The " + name + " hits!");
                    target.hp -= irandom_range(1, attack);
                    moved = true;
                    global.move += 1;
                }
                _z = 0;
            }
            else
            {
                _i += 1;
                target = instance_place(x + (movespeed * _i), y + (movespeed * _i), obj_wall);
                target2 = instance_place(x + (movespeed * _i), y + (movespeed * _i), obj_player);
                if (target == noone)
                    _z = 1;
                else
                    _z = 0;
            }
        }
    }
    if(!global.p_turn &amp;&amp; !moved)
    {
        target = instance_place(x + movespeed, y - movespeed, obj_wall);
        target2 = instance_place(x + movespeed, y - movespeed, obj_player);
        _i = 1;
        _z = 0;
        if (target == noone)
            _z = 1;
        else
            _z = 0;
        while(_z == 1)
        {
            if(target2 != noone)
            {
                if (!place_meeting(x + movespeed, y - movespeed, obj_entity))
                {
                    x += movespeed;
                    y -= movespeed;
                    moved = true;
                    global.move += 1;
                }
                else if (place_meeting(x + movespeed, y - movespeed, obj_player))
                {
                    target = instance_place(x + movespeed, y - movespeed, obj_player);
                    print("The " + name + " hits!");
                    target.hp -= irandom_range(1, attack);
                    moved = true;
                    global.move += 1;
                }
                _z = 0;
            }
            else
            {
                _i += 1;
                target = instance_place(x + (movespeed * _i), y - (movespeed * _i), obj_wall);
                target2 = instance_place(x + (movespeed * _i), y - (movespeed * _i), obj_player);
                if (target == noone)
                    _z = 1;
                else
                    _z = 0;
            }
        }
    }
    if(!global.p_turn &amp;&amp; !moved)
    {
        target = instance_place(x - movespeed, y + movespeed, obj_wall);
        target2 = instance_place(x - movespeed, y + movespeed, obj_player);
        _i = 1;
        _z = 0;
        if (target == noone)
            _z = 1;
        else
            _z = 0;
        while(_z == 1)
        {
            if(target2 != noone)
            {
                if (!place_meeting(x - movespeed, y + movespeed, obj_entity))
                {
                    x -= movespeed;
                    y += movespeed;
                    moved = true;
                    global.move += 1;
                }
                else if (place_meeting(x - movespeed, y + movespeed, obj_player))
                {
                    target = instance_place(x - movespeed, y + movespeed, obj_player);
                    print("The " + name + " hits!");
                    target.hp -= irandom_range(1, attack);
                    moved = true;
                    global.move += 1;
                }
                _z = 0;
            }
            else
            {
                _i += 1;
                target = instance_place(x - (movespeed * _i), y + (movespeed * _i), obj_wall);
                target2 = instance_place(x - (movespeed * _i), y + (movespeed * _i), obj_player);
                if (target == noone)
                    _z = 1;
                else
                    _z = 0;
            }
        }
    }
    if(!global.p_turn &amp;&amp; !moved)
    {
        target = instance_place(x - movespeed, y - movespeed, obj_wall);
        target2 = instance_place(x - movespeed, y - movespeed, obj_player);
        _i = 1;
        _z = 0;
        if (target == noone)
            _z = 1;
        else
            _z = 0;
        while(_z == 1)
        {
            if(target2 != noone)
            {
                if (!place_meeting(x - movespeed, y - movespeed, obj_entity))
                {
                    x -= movespeed;
                    y -= movespeed;
                    moved = true;
                    global.move += 1;
               }
               else if (place_meeting(x - movespeed, y - movespeed, obj_player))
               {
                   target = instance_place(x - movespeed, y - movespeed, obj_player);
                   print("The " + name + " hits!");
                   target.hp -= irandom_range(1, attack);
                   moved = true;
                   global.move += 1;
               }
               _z = 0;
            }
            else
            {
                _i += 1;
                target = instance_place(x - (movespeed * _i), y - (movespeed * _i), obj_wall);
                target2 = instance_place(x - (movespeed * _i), y - (movespeed * _i), obj_player);
                if (target == noone)
                    _z = 1;
                else
                    _z = 0;
            }
        }
    }
    if (!global.p_turn &amp;&amp; !moved)
    {
        moveEntities(1, 2, 3, 4, 6, 7, 8, 9);
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Pick up items
if(place_meeting(x, y, obj_gold))
{
    target = instance_nearest(x, y, obj_gold);
    gold += target.amount;
    with(target)
        instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>424</id>
        <kind>2</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
