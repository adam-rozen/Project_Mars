<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>408</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>room_get_name(room) != "roomInv"</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>422</id>
        <kind>1</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Destroy if no health otherwise move
found = true;
a = instance_place(600, 600, obj_ring);
c = instance_place(600, 600, obj_lowBoots);
d = instance_place(600, 600, obj_robe);
if a != noone and b != noone and c != noone
{
    if (global.class == "Rogue" or (global.class == "Monk" and obj_player.level &gt;=5) or (global.class == "Ranger" and obj_player.level &gt;=7) or (global.class == "Barbarian" and obj_player.level &gt;=15) or (global.class == "Samurai" and obj_player.level &gt;=15) or global.class == "Valkyrie" or global.class == "Acheologist" or a.name == "ring of stealth" or a.name == "ring of stealth" or c.name == "elven boots" or d.name == "elven cloak")
        if (choose(1, 2, 3, 4) == 1)
            found = false;
}
else if c != noone and d != noone
{    if (global.class == "Rogue" or (global.class == "Monk" and obj_player.level &gt;=5) or (global.class == "Ranger" and obj_player.level &gt;=7) or (global.class == "Barbarian" and obj_player.level &gt;=15) or (global.class == "Samurai" and obj_player.level &gt;=15) or global.class == "Valkyrie" or global.class == "Acheologist" or c.name == "elven boots" or d.name == "elven cloak")
        if (choose(1, 2, 3, 4) == 1)
            found = false;
}
else if a != noone and d != noone
{
    if (global.class == "Rogue" or (global.class == "Monk" and obj_player.level &gt;=5) or (global.class == "Ranger" and obj_player.level &gt;=7) or (global.class == "Barbarian" and obj_player.level &gt;=15) or (global.class == "Samurai" and obj_player.level &gt;=15) or global.class == "Valkyrie" or global.class == "Acheologist" or a.name == "ring of stealth" or a.name == "ring of stealth" or d.name == "elven cloak")
        if (choose(1, 2, 3, 4) == 1)
            found = false;
}
else if a != noone and c != noone
{
    if (global.class == "Rogue" or (global.class == "Monk" and obj_player.level &gt;=5) or (global.class == "Ranger" and obj_player.level &gt;=7) or (global.class == "Barbarian" and obj_player.level &gt;=15) or (global.class == "Samurai" and obj_player.level &gt;=15) or global.class == "Valkyrie" or global.class == "Acheologist" or a.name == "ring of stealth" or a.name == "ring of stealth" or c.name == "elven boots")
        if (choose(1, 2, 3, 4) == 1)
            found = false;
}
else if a != noone
{
    if (global.class == "Rogue" or (global.class == "Monk" and obj_player.level &gt;=5) or (global.class == "Ranger" and obj_player.level &gt;=7) or (global.class == "Barbarian" and obj_player.level &gt;=15) or (global.class == "Samurai" and obj_player.level &gt;=15) or global.class == "Valkyrie" or global.class == "Acheologist" or a.name == "ring of stealth" or a.name == "ring of stealth")
        if (choose(1, 2, 3, 4) == 1)
            found = false;
}
else if c != noone
{
    if (global.class == "Rogue" or (global.class == "Monk" and obj_player.level &gt;=5) or (global.class == "Ranger" and obj_player.level &gt;=7) or (global.class == "Barbarian" and obj_player.level &gt;=15) or (global.class == "Samurai" and obj_player.level &gt;=15) or global.class == "Valkyrie" or global.class == "Acheologist" or c.name == "elven boots")
        if (choose(1, 2, 3, 4) == 1)
            found = false;
}
else if d != noone
{
    if (global.class == "Rogue" or (global.class == "Monk" and obj_player.level &gt;=5) or (global.class == "Ranger" and obj_player.level &gt;=7) or (global.class == "Barbarian" and obj_player.level &gt;=15) or (global.class == "Samurai" and obj_player.level &gt;=15) or global.class == "Valkyrie" or global.class == "Acheologist" or d.name == "elven cloak")
        if (choose(1, 2, 3, 4) == 1)
            found = false;
}
if (hp &lt;= 0)
{
    if (gold &gt; 0)
    {
        target = instance_create(x, y, obj_gold);
        target.amount = gold;
    }
    instance_destroy();
}
else if (found)
{
    xMovespeed = 32;
    yMovespeed = 0;
    enemyMove(xMovespeed, yMovespeed);
    xMovespeed = -32;
    yMovespeed = 0
    enemyMove(xMovespeed, yMovespeed);
    xMovespeed = 0;
    yMovespeed = 32;
    enemyMove(xMovespeed, yMovespeed);
    xMovespeed = 0;
    yMovespeed = -32;
    enemyMove(xMovespeed, yMovespeed);
    xMovespeed = 32;
    yMovespeed = 32;
    enemyMove(xMovespeed, yMovespeed)
    xMovespeed = 32;
    yMovespeed = -32;
    enemyMove(xMovespeed, yMovespeed);
    xMovespeed = -32;
    yMovespeed = 32;
    enemyMove(xMovespeed, yMovespeed);
    xMovespeed = -32;
    yMovespeed = -32;
    enemyMove(xMovespeed, yMovespeed);
    if (!global.p_turn &amp;&amp; !moved)
    {
        randomEnemyMove(1, 2, 3, 4, 6, 7, 8, 9);
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Pick up items
if(place_meeting(x, y, obj_gold))
{
    target = instance_nearest(x, y, obj_gold);
    gold += target.amount;
    with(target)
        instance_destroy();
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>424</id>
        <kind>2</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
