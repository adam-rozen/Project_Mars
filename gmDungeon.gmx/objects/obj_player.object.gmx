<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_player</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>-1</persistent>
  <parentName>obj_entity</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Parameters
instance_create(x,y,obj_textbox);
turn = 0;
gold = 0;
level = 1;
if (global.class = "Wizard")
    mana = irandom_range(5,7);
else
    mana = 1;
maxMana = mana;
counter = 0;
maxHP = irandom_range(12,18);
hp = maxHP;
playerNutrition = 900;
zap = false;
if (global.class = "Fighter")
    attack = 10
else
    attack = 6
global.move = 0;
window_set_caption("The Diplomats");
global.p_turn = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Zoom
/*if (keyboard_check(ord('Z'))) {
    view_wview = view_wport * 4;
    view_hview = view_hport * 4;
} else {
    view_wview = view_wport;
    view_hview = view_hport;
}*/
view_xview = x - (view_wview - sprite_width) / 2;
view_yview = y - (view_hview - sprite_height) / 2;
room_caption = 'Position: (' + string(x div 32) + '; ' + string(y div 32) + ')';

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>408</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>room_get_name(room) != "roomInv"</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>422</id>
        <kind>1</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///HP
if (hp &lt;= 0)
{
   // show_message("Game Over");
    //game_end();
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Movement
if(global.move &gt;= instance_number(obj_enemy) &amp;&amp; !global.p_turn)
{
    global.p_turn = true;
    global.move = 0;
    with(obj_enemy)
    {
        moved = false;
    }
}
if (global.p_turn &amp;&amp; !zap)
{
    if (keyboard_check_released(vk_numpad8) || keyboard_check_released(ord('8')))
    {
        if (!place_meeting(x, y - movespeed, obj_wall))
        {
            print("");
            target = instance_place(x, y - movespeed, obj_entity);
            if (target == noone)
            {
                y -= movespeed;
            }
            else
            {
                target.hp-=irandom_range(1, attack);
                if (target.hp &gt; 0)
                {
                    print("You hit the " + target.name + "!");
                }
                else
                {
                    print("You kill the " + target.name + "!");
                    xp += target.xp;
                }
            }
            endPlayerTurn();
        }
    }
    if (keyboard_check_released(vk_numpad6) || keyboard_check_released(ord('6')))
    {
        if (!place_meeting(x + movespeed, y, obj_wall))
        {
            print("");
            target = instance_place(x + movespeed, y, obj_entity);
            if(target == noone)
            {
                x += movespeed;
            }
            else
            {
                target.hp-=irandom_range(1, attack);
                if (target.hp &gt; 0)
                {
                    print("You hit the " + target.name + "!");
                }
                else
                {
                    print("You kill the " + target.name + "!");
                    xp += target.xp;
                }
            }
           endPlayerTurn();
        }
    }
    if (keyboard_check_released(vk_numpad4) || keyboard_check_released(ord('4')))
    {
        if (!place_meeting(x - movespeed, y, obj_wall))
        {
            print("");
            target = instance_place(x - movespeed, y, obj_entity);
            if(target == noone)
            {
                x -= movespeed;
            }
            else
            {
                target.hp-=irandom_range(1, attack);
                if (target.hp &gt; 0)
                {
                    print("You hit the " + target.name + "!");
                }
                else
                {
                    print("You kill the " + target.name + "!");
                    xp += target.xp;
                }
            }
            endPlayerTurn();
        }
    }
    if (keyboard_check_released(vk_numpad2) || keyboard_check_released(ord('2')) &amp;&amp; global.p_turn == true)
    {
        if (!place_meeting(x, y + movespeed, obj_wall))
        {
            print("");
            target = instance_place(x, y + movespeed, obj_entity);
            if (target == noone)
            {
                 y += movespeed;
            }
            else
            {
                target.hp-=irandom_range(1, attack);
                if (target.hp &gt; 0)
                {
                    print("You hit the " + target.name + "!");
                }
                else
                {
                    print("You kill the " + target.name + "!");
                    xp += target.xp;
                }
            }
            endPlayerTurn();
        }
    }
    if (keyboard_check_released(vk_numpad1) || keyboard_check_released(ord('1')))
    {
        if (!place_meeting(x - movespeed, y + movespeed, obj_wall))
        {
            print("");
            target = instance_place(x - movespeed, y + movespeed, obj_entity);
            if (target == noone)
            {
                x -= movespeed;
                y += movespeed;
            }
            else
            {
                target.hp-=irandom_range(1, attack);
                if (target.hp &gt; 0)
                {
                    print("You hit the " + target.name + "!");
                }
                else
                {
                    print("You kill the " + target.name + "!");
                    xp += target.xp;
                }
            }
            endPlayerTurn();
        }
    }
    if (keyboard_check_released(vk_numpad3) || keyboard_check_released(ord('3')))
    {
        if (!place_meeting(x + movespeed, y + movespeed, obj_wall))
        {
            print("");
            target = instance_place(x + movespeed, y + movespeed, obj_entity);
            if(target == noone)
            {
                y += movespeed;
                x += movespeed;
            }
            else
            {
                target.hp-=irandom_range(1, attack);
                if (target.hp &gt; 0)
                {
                    print("You hit the " + target.name + "!");
                }
                else
                {
                    print("You kill the " + target.name + "!");
                    xp += target.xp;
                }
            }
            endPlayerTurn();
        }
    }
    if (keyboard_check_released(vk_numpad7) || keyboard_check_released(ord('7')))
    {
        if (!place_meeting(x - movespeed, y - movespeed, obj_wall))
        {
            print("");
            target = instance_place(x - movespeed, y - movespeed, obj_entity);
            if (target == noone)
            {
                x -= movespeed;
                y -= movespeed;
            }
            else
            {
                target.hp-=irandom_range(1, attack);
                if (target.hp &gt; 0)
                {
                    print("You hit the " + target.name + "!");
                }
                else
                {
                    print("You kill the " + target.name + "!");
                    xp += target.xp;
                }
            }
            endPlayerTurn();
        }
    }
    if (keyboard_check_released(vk_numpad9) || keyboard_check_released(ord('9')))
    {
        if (!place_meeting(x + movespeed, y - movespeed, obj_wall))
        {
            print("");
            target = instance_place(x + movespeed, y - movespeed, obj_entity);
            if (target == noone)
            {
                y -= movespeed;
                x += movespeed;
            }
            else
            {
                target.hp-=irandom_range(1, attack);
                if (target.hp &gt; 0)
                {
                    print("You hit the " + target.name + "!");
                }
                else
                {
                    print("You kill the " + target.name + "!");
                    xp += target.xp;
                }
            }
            endPlayerTurn();
        }
    }
}
else if (global.p_turn &amp;&amp; zap)
{
    if (keyboard_check_released(vk_numpad9) || keyboard_check_released(ord('9')))
    {
        zap = false;
        mana-=5;
        range = irandom_range(6,13);
        damage = irandom_range(1,12) + irandom_range(1,12);
        tf = true;
        for(_x = 1; _x &lt; range &amp;&amp; tf; _x++)
        {
            for(_y = 1; _y &lt; range &amp;&amp; tf; _y++)
            {
                target = instance_place(x + (_x*movespeed),y - (_y*movespeed), obj_entity);
                if (target != noone)
                {
                   target.hp-=damage;
                   print("Kapow!");
                }
                target2 = instance_place(x + (_x*movespeed),y - (_y*movespeed), obj_wall);
                if (target2 != noone)
                {
                    tf = false;
                }
            }
        }
        endPlayerTurn();
    }
    if (keyboard_check_released(vk_numpad7) || keyboard_check_released(ord('7')))
    {
        zap = false;
        mana -= 5;
        range = irandom_range(6,13);
        damage = irandom_range(1,12) + irandom_range(1,12);
        tf = true;
        for(_x = 1; _x &lt; range &amp;&amp; tf; _x++)
        {
            for(_y = 1; _y &lt; range &amp;&amp; tf; _y++)
            {
                target = instance_place(x - (_x*movespeed),y - (_y*movespeed), obj_entity);
                if (target != noone)
                {
                   target.hp-=damage;
                   print("Kapow!");
                }
                target2 = instance_place(x - (_x*movespeed),y - (_y*movespeed), obj_wall);
                if (target2 != noone)
                {
                    tf = false;
                }
            }
        }
        endPlayerTurn();
    }
    if (keyboard_check_released(vk_numpad3) || keyboard_check_released(ord('3')))
    {
        zap = false;
        mana -=5;
        range = irandom_range(6,13);
        damage = irandom_range(1,12) + irandom_range(1,12);
        tf = true;
        for(_x = 1; _x &lt; range &amp;&amp; tf; _x++)
        {
            for(_y = 1; _y &lt; range &amp;&amp; tf; _y++)
            {
                target = instance_place(x + (_x*movespeed),y + (_y*movespeed), obj_entity);
                if (target != noone)
                {
                   target.hp-=damage;
                   print("Kapow!");
                }
                target2 = instance_place(x + (_x*movespeed),y + (_y*movespeed), obj_wall);
                if (target2 != noone)
                {
                    tf = false;
                }
            }
        }
        endPlayerTurn();
    }
    if (keyboard_check_released(vk_numpad1) || keyboard_check_released(ord('1')))
    {
        zap = false;
        mana -= 5;
        range = irandom_range(6,13);
        damage = irandom_range(1,12) + irandom_range(1,12);
        tf = true;
        for(_x = 1; _x &lt; range &amp;&amp; tf; _x++)
        {
            for(_y = 1; _y &lt; range &amp;&amp; tf; _y++)
            {
                target = instance_place(x - (_x*movespeed),y + (_y*movespeed), obj_entity);
                if (target != noone)
                {
                   target.hp-=damage;
                   print("Kapow!");
                }
                target2 = instance_place(x - (_x*movespeed),y + (_y*movespeed), obj_wall);
                if (target2 != noone)
                {
                    tf = false;
                }
            }
        }
        endPlayerTurn();
    }
    if (keyboard_check_released(vk_numpad2) || keyboard_check_released(ord('2')))
    {
        zap = false;
        mana -= 5;
        range = irandom_range(6,13);
        damage = irandom_range(1,12) + irandom_range(1,12);
        tf = true;
        for(_y = 1; _y &lt; range &amp;&amp; tf; _y++)
        {
            target = instance_place(x,y + (_y*movespeed), obj_entity);
            if (target != noone)
            {
               target.hp-=damage;
               print("Kapow!");
            }
            target2 = instance_place(x,y + (_y*movespeed), obj_wall);
            if (target2 != noone)
            {
                tf = false;
            }
        }
        endPlayerTurn();
    }
    if (keyboard_check_released(vk_numpad4) || keyboard_check_released(ord('4')))
    {
        zap = false;
        mana -= 5;
        range = irandom_range(6,13);
        damage = irandom_range(1,12) + irandom_range(1,12);
        tf = true;
        for(_x = 1; _x &lt; range &amp;&amp; tf; _x++)
        {
            target = instance_place(x - (_x*movespeed), y, obj_entity);
            if (target != noone)
            {
               target.hp-=damage;
               print("Kapow!");
            }
            target2 = instance_place(x - (_x*movespeed), y, obj_wall);
            if (target2 != noone)
            {
                tf = false;
            }
        }
        endPlayerTurn();
    }
    if (keyboard_check_released(vk_numpad6) || keyboard_check_released(ord('6')))
    {
        zap = false;
        mana -= 5;
        range = irandom_range(6,13);
        damage = irandom_range(1,12) + irandom_range(1,12);
        tf = true;
        for(_x = 1; _x &lt; range &amp;&amp; tf; _x++)
        {
            target = instance_place(x + (_x*movespeed), y, obj_entity);
            if (target != noone)
            {
               target.hp-=damage;
               print("Kapow!");
            }
            target2 = instance_place(x + (_x*movespeed),y, obj_wall);
            if (target2 != noone)
            {
                tf = false;
            }
        }
        endPlayerTurn();
    }
    if (keyboard_check_released(vk_numpad8) || keyboard_check_released(ord('8')))
    {
        zap = false;
        mana -= 5;
        range = irandom_range(6,13);
        damage = irandom_range(1,12) + irandom_range(1,12);
        tf = true;
        for(_y = 1; _y &lt; range &amp;&amp; tf; _y++)
        {
            target = instance_place(x, y - (_y*movespeed), obj_entity);
            if (target != noone)
            {
               target.hp-=damage;
               print("Kapow!");
            }
            target2 = instance_place(x, y + (_y*movespeed), obj_wall);
            if (target2 != noone)
            {
                tf = false;
            }
        }
        endPlayerTurn();
    }
    if (keyboard_check_released(vk_numpad5) || keyboard_check_released(ord('5')))
    {
        zap = false;
        mana -= 5;
        damage = irandom_range(1,12) + irandom_range(1,12);
        target.hp-=damage;
        print("Kapow!");
        endPlayerTurn();
    }
    if (keyboard_check_released(vk_escape))
    {
        zap = false;
        print("You decide not to fire");
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Collect Items
target = instance_place(x, y, obj_gold);
if(target!= noone)
{
    gold += target.amount;
    print("You picked up " + string(target.amount) + " gold");
    with(target)
        instance_destroy();
}
target = instance_place(x,y, obj_item);
if (target!=noone)
{
    addToInv(target);
    print("You picked up " + target.name);
    instance_deactivate_object(target);
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Commands
if (place_meeting(x,y,obj_down) &amp;&amp; keyboard_check_released(190) &amp;&amp; keyboard_check_released(vk_shift) &amp;&amp; global.p_turn)
{
    if (room_next(room) != -1)
    {
        global.toughness+=1;
        counter += 1;
        global.p_turn = false;
        room_goto(room_next(room));
        print("You tumble down the stairs.");
    }
    
}
if (place_meeting(x,y,obj_up) &amp;&amp; keyboard_check_released(188) &amp;&amp; keyboard_check_released(vk_shift) &amp;&amp; global.p_turn)
{
    if (room_previous(room) !=-1)
    {
        global.toughness-=1;
        counter += 1;
        global.p_turn = false;
        room_goto(room_previous(room));
        print("You run too fast up the stairs.");
    }
}
if (keyboard_check_released(ord("Z")) &amp;&amp; global.p_turn)
{
    if (mana &gt; 5)
    {
        print("In what direction?");
        zap = true;
    }
    else
    {
        print("You don't have enough mana");
    }
}
if (keyboard_check_released(ord("I")) &amp;&amp; global.p_turn)
{
    global.rm = room;
    room_goto(roomInv);
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>424</id>
        <kind>2</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Draw
if (room_get_name(room) != "roomInv")
{
    draw_self();
    draw_set_colour(c_black);
    draw_rectangle(x - 352, y + 256, x + 384, y + 224, false);
    draw_set_colour(c_white);
    draw_text(x - 344, y + 224, string(hp) + " / " + string(maxHP));
    draw_text(x - 248, y + 224, "Floor:" + string(global.toughness));
    draw_text(x - 152, y + 224, "Gold:" + string(gold));
    draw_text(x - 56, y + 224, "Turn:" + string(turn));
    draw_text(x + 40, y + 224, "Mana:" + string(mana));
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
